apiVersion: v1
kind: ConfigMap
metadata:
  name: pokedex-graphql-config
  namespace: pokedex
  labels:
    app: pokedex-graphql
  annotations:
    description: "Configuration for pokedex-graphql"
data:
  SERVER_PORT: "80"
  SPRING_DATA_MONGODB_HOST: "mongodb.pokedex.svc.cluster.local"
  SPRING_DATA_MONGODB_PORT: "27017"
---
apiVersion: v1
kind: Secret
metadata:
  name: pokedex-graphql-secret
  namespace: pokedex
  labels:
    app: pokedex-graphql
  annotations:
    description: "Secret for pokedex-graphql"
type: Opaque
data:
  SPRING_DATA_MONGODB_USERNAME: "YWRtaW4="     # admin
  SPRING_DATA_MONGODB_PASSWORD: "cGFzc3dvcmQ=" # password
---
apiVersion: v1
kind: Service
metadata:
  name: pokedex-graphql-service
  namespace: pokedex
  labels:
    app: pokedex-graphql
  annotations:
    description: "API Service for pokedex-graphql"
spec:
  type: NodePort
  selector:
    app: pokedex-graphql
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pokedex-graphql
  namespace: pokedex
  labels:
    app: pokedex-graphql
  annotations:
    description: "Deployment spec for pokedex-graphql"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pokedex-graphql
  template:
    metadata:
      labels:
        app: pokedex-graphql
    spec:
      containers:
        - name: pokedex-graphql
          image: pokedex-graphql:latest
          imagePullPolicy: Never
          ports:
            - name: http
              protocol: TCP
              containerPort: 80
          # Startup probe - checks initial application startup
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 80
            failureThreshold: 30       # Allow up to 5 minutes for startup (30 * 10s)
            periodSeconds: 10
            initialDelaySeconds: 10
          # Readiness probe - checks if app is ready to serve traffic
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          # Liveness probe - checks if app is running properly
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 80
            initialDelaySeconds: 60    # Give app time to start up
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          envFrom:
            - secretRef:
                name: pokedex-graphql-secret
            - configMapRef:
                name: pokedex-graphql-config
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"